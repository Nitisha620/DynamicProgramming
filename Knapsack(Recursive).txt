int static dp[100][100];
memset(dp,-1,sizeof(dp));

int knapsack(int item[],int w[],int capacity,int n){

	if(n==0 or capacity==0)
	return 0
	if(dp[n][capacity] != -1)
	return dp[n][capacity]
	
	if(w[n-1] <= capacity)
	return t[n][capacity] = max(w[n-1]) + knapsack(item,w,capacity-w[n],n-1),
		   knapsack(item,w,capcity,n-1));
	else if(w[n-1] > capacity)
	retrun t[n][capacity] = knapsack(item,w,capacity,n-1);
}
